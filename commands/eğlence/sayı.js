const { SlashCommandBuilder, EmbedBuilder, ButtonBuilder, ButtonStyle, ActionRowBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('sayÄ±')
        .setDescription('SayÄ± tahmin oyunu')
        .addUserOption(option =>
            option
                .setName('rakip')
                .setDescription('Oynamak istediÄŸin rakip')
                .setRequired(true)),

    async execute(interaction) {
        const opponent = interaction.options.getUser('rakip');
        
        if (opponent.id === interaction.user.id) {
            return interaction.reply({
                content: 'Kendinle oynayamazsÄ±n!',
                flags: ['Ephemeral']
            });
        }

        if (opponent.bot) {
            return interaction.reply({
                content: 'Botlar ile oynayamazsÄ±n!',
                flags: ['Ephemeral']
            });
        }

        const embed = new EmbedBuilder()
            .setTitle('ðŸ”¢ SayÄ± Tahmin')
            .setDescription(`${opponent}, ${interaction.user} seninle sayÄ± tahmin yarÄ±ÅŸÄ± oynamak istiyor!\n\nOyun KurallarÄ±:\n- Her oyuncuya 5 tahmin hakkÄ± verilir\n- 1-100 arasÄ± bir sayÄ± tahmin edilecek\n- En yakÄ±n tahmini yapan kazanÄ±r`)
            .setColor('#00ff00')
            .setImage('https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExMjE4Y2JhZTEyYTBmZDFhZjE1ZmZjYTYxMzQ0ZjM0ODM2NjI0MjE2ZiZlcD12MV9pbnRlcm5hbF9naWZzX2dpZklkJmN0PWc/3o7btPCcdNniyf0ArS/giphy.gif');

        const row = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId(`sayÄ±_accept_${interaction.user.id}_${opponent.id}`)
                    .setLabel('Kabul Et')
                    .setStyle(ButtonStyle.Success),
                new ButtonBuilder()
                    .setCustomId(`sayÄ±_reject_${interaction.user.id}_${opponent.id}`)
                    .setLabel('Reddet')
                    .setStyle(ButtonStyle.Danger)
            );

        await interaction.reply({
            content: `${opponent}`,
            embeds: [embed],
            components: [row]
        });
    }
};
