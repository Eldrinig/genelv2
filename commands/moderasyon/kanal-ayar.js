const { SlashCommandBuilder, PermissionFlagsBits, EmbedBuilder, ChannelType } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('kanal-ayar')
        .setDescription('Kanal ayarlarÄ±nÄ± yÃ¶netir')
        .setDefaultMemberPermissions(PermissionFlagsBits.ManageChannels)
        .addSubcommand(subcommand =>
            subcommand
                .setName('yavaÅŸ-mod')
                .setDescription('Kanala yavaÅŸ mod ekler')
                .addChannelOption(option =>
                    option
                        .setName('kanal')
                        .setDescription('Ayarlanacak kanal')
                        .addChannelTypes(ChannelType.GuildText)
                        .setRequired(true))
                .addIntegerOption(option =>
                    option
                        .setName('sÃ¼re')
                        .setDescription('YavaÅŸ mod sÃ¼resi (saniye)')
                        .setRequired(true)
                        .setMinValue(0)
                        .setMaxValue(21600)))
        .addSubcommand(subcommand =>
            subcommand
                .setName('kilitli')
                .setDescription('KanalÄ± kilitler/kilidini aÃ§ar')
                .addChannelOption(option =>
                    option
                        .setName('kanal')
                        .setDescription('Ayarlanacak kanal')
                        .addChannelTypes(ChannelType.GuildText)
                        .setRequired(true))
                .addBooleanOption(option =>
                    option
                        .setName('kilitli')
                        .setDescription('Kanal kilitli olsun mu?')
                        .setRequired(true)))
        .addSubcommand(subcommand =>
            subcommand
                .setName('isim')
                .setDescription('Kanal ismini deÄŸiÅŸtirir')
                .addChannelOption(option =>
                    option
                        .setName('kanal')
                        .setDescription('Ayarlanacak kanal')
                        .setRequired(true))
                .addStringOption(option =>
                    option
                        .setName('isim')
                        .setDescription('Yeni kanal ismi')
                        .setRequired(true))),

    async execute(interaction) {
        const subcommand = interaction.options.getSubcommand();
        const channel = interaction.options.getChannel('kanal');

        switch (subcommand) {
            case 'yavaÅŸ-mod': {
                const duration = interaction.options.getInteger('sÃ¼re');
                await channel.setRateLimitPerUser(duration);

                const embed = new EmbedBuilder()
                    .setTitle('âœ… YavaÅŸ Mod AyarlandÄ±')
                    .setColor('#00ff00')
                    .setDescription(`${channel} kanalÄ±nda yavaÅŸ mod ${duration} saniye olarak ayarlandÄ±.`)
                    .setTimestamp();

                await interaction.reply({ embeds: [embed] });
                break;
            }

            case 'kilitli': {
                const locked = interaction.options.getBoolean('kilitli');
                await channel.permissionOverwrites.edit(interaction.guild.roles.everyone, {
                    SendMessages: !locked
                });

                const embed = new EmbedBuilder()
                    .setTitle(locked ? 'ğŸ”’ Kanal Kilitlendi' : 'ğŸ”“ Kanal Kilidi AÃ§Ä±ldÄ±')
                    .setColor(locked ? '#ff0000' : '#00ff00')
                    .setDescription(`${channel} kanalÄ± ${locked ? 'kilitlendi' : 'kilidi aÃ§Ä±ldÄ±'}.`)
                    .setTimestamp();

                await interaction.reply({ embeds: [embed] });
                break;
            }

            case 'isim': {
                const newName = interaction.options.getString('isim');
                const oldName = channel.name;
                await channel.setName(newName);

                const embed = new EmbedBuilder()
                    .setTitle('âœ… Kanal Ä°smi DeÄŸiÅŸtirildi')
                    .setColor('#00ff00')
                    .addFields(
                        { name: 'Eski Ä°sim', value: oldName },
                        { name: 'Yeni Ä°sim', value: newName }
                    )
                    .setTimestamp();

                await interaction.reply({ embeds: [embed] });
                break;
            }
        }
    }
}; 